// File Name: C.cpp
// Author: YangYue
// Created Time: Mon Jul 28 14:55:52 2014
//headers 
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <ctime>
#include <string>
#include <queue>
#include <set>
#include <map>
#include <iostream>
#include <vector>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef pair<double,double> PDD;
typedef pair<LL, LL>PLL;
typedef pair<LL,int>PLI;


const int MaxN = 1200005;
const int MOD = (int) 1e9 + 7;

class Byteland {
public:
	LL fac[MaxN], invfac[MaxN];
	LL C(LL n, LL k) {
		if (n < k || k < 0) return 0;
		return fac[n] * invfac[k] % MOD * invfac[n-k] % MOD;
	}
	LL fpow(LL a, int t, int mod) {
		LL res = 1;
		for (; t; t >>= 1, a = a * a % mod)
			if (t & 1) res = res * a % mod;
		return res;
	}
	int CountDifferentMaps(int n, int k) {
		fac[0] = invfac[0] = 1;
		for (int i = 1; i <= 1200000; ++i) {
			fac[i] = fac[i-1] * i % MOD;
			invfac[i] = fpow(fac[i], MOD - 2, MOD);
		}
		LL ans = n;
		ans = ans * C(n-1,k) % MOD;
		for (int i = k; i <= n - 2; ++i) ans = ans * i % MOD;
		return (int) ans;
	}
};
// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, int p1, bool hasAnswer, int p2) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1;
	cout << "]" << endl;
	Byteland *obj;
	int answer;
	obj = new Byteland();
	clock_t startTime = clock();
	answer = obj->CountDifferentMaps(p0, p1);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p2 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p2;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	int p0;
	int p1;
	int p2;
	
	{
	// ----- test 0 -----
	p0 = 5;
	p1 = 4;
	p2 = 5;
	all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
	// ------------------
	}
	
	{
	// ----- test 1 -----
	p0 = 6;
	p1 = 3;
	p2 = 720;
	all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
// hehe ~


