// File Name: A.cpp
// Author: YangYue
// Created Time: Sun Jun  8 00:00:16 2014
//headers 
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <ctime>
#include <string>
#include <queue>
#include <set>
#include <map>
#include <iostream>
#include <vector>

using namespace std;
class SwitchingGame {
public:
	char A[333][333];
	int timeToWin(vector <string> states) {
		int n = states.size();
		int m = states[0].size();
		for (int i = 0; i < m; ++i) A[0][i] = '-';
		for (int i = 1; i <= n; ++i)
		for (int j = 0; j < m; ++j) A[i][j] = states[i-1][j];

		int x = -1, y = -1;
		int res = 0;
		for (int i = 1; i <= n; ++i) {
			bool needx = 0;
			bool needy = 0;
			for (int j = 0; j < m; ++j) {
				if (A[i][j] == '+') {
					int p = -100;
					for (int k = i - 1; k >= 0; --k) if (A[k][j] == '-') {
						p = k;
						break;
					}
					if (p >= x) needx = 1;
				} else
				if (A[i][j] == '-') {
					int p = -100;
					for (int k = i - 1; k >= 0; --k) if (A[k][j] == '+') {
						p = k;
						break;
					}
					if (p >= y) needy = 1;
				}
			}
			if (needx) ++res, x = i;
			if (needy) ++res, y = i;
		}
		return res + n;
	}
};

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, vector <string> p0, bool hasAnswer, int p1) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p0[i] << "\"";
	}
	cout << "}";
	cout << "]" << endl;
	SwitchingGame *obj;
	int answer;
	obj = new SwitchingGame();
	clock_t startTime = clock();
	answer = obj->timeToWin(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	vector <string> p0;
	int p1;
	
	{
	// ----- test 0 -----
	string t0[] = {"++--","--++"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 5;
	all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 1 -----
	string t0[] = {"+-++","+-++"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 3;
	all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 2 -----
	string t0[] = {"++","+?","?+","++"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 5;
	all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 3 -----
	string t0[] = {"+","?","?","?","-"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 7;
	all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 4 -----
	string t0[] = {"+?" "?+++","++?" "?+-","?++?" "?+","?-+-?" "?","?" "?+?++","++-?+?","?++?-+","?--+++","-?" "?-?+"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 20;
	all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
// hehe ~


